language: rust
sudo: required
dist: xenial

cache:
  cargo: true
  directories:
    - $HOME/.npm
before_cache: script/ci/prune-cache.sh

env:
  global:
    - JOBS=1 # See https://git.io/vdao3 for details.
    - DATABASE_URL=postgres://postgres:@localhost/cargo_registry_test
    - TEST_DATABASE_URL=postgres://postgres:@localhost/cargo_registry_test
    - CARGO_TARGET_DIR=target
    - CARGO_INCREMENTAL=0
    - PERCY_PARALLEL_TOTAL=2
    # Percy secrets are included here to enable Percy's GitHub integration
    # on community-submitted PRs
    - PERCY_TOKEN=0d8707a02b19aebbec79bb0bf302b8d2fa95edb33169cfe41b084289596670b1
    - PERCY_PROJECT=crates-io/crates.io
    - PGPORT=5433

install:
  - sudo cp /etc/postgresql/10/main/pg_hba.conf /etc/postgresql/11/main/pg_hba.conf
  - sudo systemctl restart postgresql@11-main
  - script/ci/cargo-clean-on-new-rustc-version.sh
  - cargo install --force diesel_cli --vers `cat .diesel_version` --no-default-features --features postgres && export PATH=$HOME/.cargo/bin:$PATH

before_script:
  - diesel database setup --locked-schema

addons:
  chrome: stable
  postgresql: "11"
  apt:
    packages:
      - postgresql-11
      - postgresql-client-11

matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly
  include:
    - name: Backend
      rust: stable
      before_install:
        - rustup component add rustfmt-preview
        - rustup component add clippy-preview
      script:
        - cargo fmt -- --check
        - cargo clippy --all-targets --all-features --all
        - cargo test
    - name: Frontend
      language: node_js
      node_js: 12
      install:
        - npm ci
      before_script: skip
      script:
        - npm run lint:hbs
        - npm run lint:js
        - npm run lint:deps
        - npm test
    - rust: beta
      script:
        - cargo test
    - rust: nightly
      script:
        - cargo test

notifications:
  email:
    on_success: never
