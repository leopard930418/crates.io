language: rust
dist: bionic
os: linux

branches:
  only:
  - auto
  - try
  - master

cache:
  cargo: true
  directories:
    - $HOME/.npm
before_cache: script/ci/prune-cache.sh

env:
  global:
    - RUST_BACKTRACE=1
    - JOBS=1 # See https://git.io/vdao3 for details.
    - DATABASE_URL=postgres:///cargo_registry_test
    - TEST_DATABASE_URL=postgres:///cargo_registry_test
    - CARGO_INCREMENTAL=0
    # Percy secrets are included here to enable Percy's GitHub integration
    # on community-submitted PRs
    - PERCY_TOKEN=0d8707a02b19aebbec79bb0bf302b8d2fa95edb33169cfe41b084289596670b1
    - PERCY_PROJECT=crates-io/crates.io
    - PATH=$HOME/.cargo/bin:$PATH
    - RUSTFLAGS="-C debuginfo=0 -D warnings"
    - MALLOC_CONF=background_thread:true,abort_conf:true,abort:true,junk:true

install:
  - script/ci/cargo-clean-on-new-rustc-version.sh
  - which diesel || cargo install diesel_cli --vers `cat .diesel_version` --no-default-features --features postgres --debug

before_script:
  - diesel database setup --locked-schema

addons:
  postgresql: "11"
  apt:
    packages:
      - postgresql-11
      - postgresql-client-11

jobs:
  fast_finish: true
  allow_failures:
    - rust: nightly
  include:
    - name: Backend
      rust: stable
      before_install:
        - rustup component add rustfmt-preview
        - rustup component add clippy-preview
      script:
        - cargo fmt -- --check
        - cargo clippy --all-targets --all-features --all
        - cargo test
    - name: Frontend
      language: node_js
      node_js: 12
      addons:
        chrome: stable
      install:
        - npm ci
      before_script: skip
      script:
        - npm run lint:hbs
        - npm run lint:js
        - npm run lint:deps
        - if [ "$TRAVIS_REPO_SLUG" == "rust-lang/crates.io" ]; then percy exec -- npm run test-coverage; fi
    - rust: beta
      script:
        - cargo test
    - rust: nightly
      script:
        - cargo test

notifications:
  email:
    on_success: never
